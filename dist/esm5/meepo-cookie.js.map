{
  "version": 3,
  "file": "meepo-cookie.js",
  "sources": [
    "ng://meepo-cookie/out/public_api.ts",
    "ng://meepo-cookie/out/services/cookies.service.ts",
    "ng://meepo-cookie/out/services/base-cookie-options.ts"
  ],
  "sourcesContent": [
    "\nimport { BaseCookieOptions, CookieOptions } from './services/base-cookie-options';\nimport { CookieOptionsArgs } from './services/cookie-options-args.model';\nimport { CookieService } from './services/cookies.service';\n\nexport const ANGULAR2_COOKIE_PROVIDERS = [\n    { provide: CookieOptions, useClass: BaseCookieOptions },\n    { provide: CookieService, useFactory: cookieServiceFactory, deps: [CookieOptions] }\n];\n\nexport function cookieServiceFactory(options: CookieOptions) {\n    return new CookieService(options);\n}\n\nexport { BaseCookieOptions, CookieOptions } from './services/base-cookie-options';\nexport { CookieOptionsArgs } from './services/cookie-options-args.model';\nexport { CookieService } from './services/cookies.service';\n",
    "import { Injectable, Optional } from '@angular/core';\n\nimport { CookieOptions } from './base-cookie-options';\nimport { CookieOptionsArgs } from './cookie-options-args.model';\n\n@Injectable()\nexport class CookieService implements ICookieService {\n  protected get cookieString(): string {\n    return document.cookie || '';\n  }\n\n  protected set cookieString(val: string) {\n    document.cookie = val;\n  }\n\n  constructor(@Optional() private _defaultOptions?: CookieOptions) { }\n\n  get(key: string): string {\n    return (<any>this._cookieReader())[key];\n  }\n\n  getObject(key: string): Object {\n    let value = this.get(key);\n    return value ? JSON.parse(value) : value;\n  }\n\n  getAll(): Object {\n    return <any>this._cookieReader();\n  }\n\n  put(key: string, value: string, options?: CookieOptionsArgs) {\n    this._cookieWriter()(key, value, options);\n  }\n\n  putObject(key: string, value: Object, options?: CookieOptionsArgs) {\n    this.put(key, JSON.stringify(value), options);\n  }\n\n  remove(key: string, options?: CookieOptionsArgs): void {\n    this._cookieWriter()(key, undefined, options);\n  }\n\n  removeAll(): void {\n    let cookies = this.getAll();\n    Object.keys(cookies).forEach(key => {\n      this.remove(key);\n    });\n  }\n\n  private _cookieReader(): Object {\n    let lastCookies = {};\n    let lastCookieString = '';\n    let that = this;\n\n    let cookieArray: string[], cookie: string, i: number, index: number, name: string;\n    let currentCookieString = this.cookieString;\n    if (currentCookieString !== lastCookieString) {\n      lastCookieString = currentCookieString;\n      cookieArray = lastCookieString.split('; ');\n      lastCookies = {};\n      for (i = 0; i < cookieArray.length; i++) {\n        cookie = cookieArray[i];\n        index = cookie.indexOf('=');\n        if (index > 0) {\n          name = that._safeDecodeURIComponent(cookie.substring(0, index));\n          if (this.isBlank((<any>lastCookies)[name])) {\n            (<any>lastCookies)[name] = that._safeDecodeURIComponent(cookie.substring(index + 1));\n          }\n        }\n      }\n    }\n    return lastCookies;\n  }\n\n  private _cookieWriter() {\n    let that = this;\n\n    return function (name: string, value: string, options?: CookieOptionsArgs) {\n      that.cookieString = that._buildCookieString(name, value, options);\n    };\n  }\n\n  private _safeDecodeURIComponent(str: string) {\n    try {\n      return decodeURIComponent(str);\n    } catch (e) {\n      return str;\n    }\n  }\n\n  private _buildCookieString(name: string, value: string, options?: CookieOptionsArgs): string {\n    let cookiePath = '/';\n    let path: string, expires: any;\n    let defaultOpts =\n      this._defaultOptions || new CookieOptions(<CookieOptionsArgs>{ path: cookiePath });\n    let opts: CookieOptions = this._mergeOptions(defaultOpts, options);\n    expires = opts.expires;\n    if (this.isBlank(value)) {\n      expires = 'Thu, 01 Jan 1970 00:00:00 GMT';\n      value = '';\n    }\n    if (this.isString(expires)) {\n      expires = new Date(expires);\n    }\n\n    let str = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n    str += opts.path ? ';path=' + opts.path : '';\n    str += opts.domain ? ';domain=' + opts.domain : '';\n    str += expires ? ';expires=' + expires.toUTCString() : '';\n    str += opts.secure ? ';secure' : '';\n\n    let cookieLength = str.length + 1;\n    if (cookieLength > 4096) {\n      console.log(`Cookie \\'${name}\\' possibly not set or overflowed because it was too \n      large (${cookieLength} > 4096 bytes)!`);\n    }\n    return str;\n  }\n\n  private _mergeOptions(defaultOpts: CookieOptions, providedOpts?: CookieOptionsArgs):\n    CookieOptions {\n    let newOpts = defaultOpts;\n    if (this.isPresent(providedOpts)) {\n      return newOpts.merge(new CookieOptions(providedOpts));\n    }\n    return newOpts;\n  }\n\n  private isBlank(obj: any): boolean {\n    return obj === undefined || obj === null;\n  }\n\n  private isPresent(obj: any): boolean {\n    return obj !== undefined && obj !== null;\n  }\n\n  private isString(obj: any): obj is string {\n    return typeof obj === 'string';\n  }\n}\n\nexport interface ICookieService {\n  get(key: string): string;\n  getObject(key: string): Object;\n  getAll(): Object;\n  put(key: string, value: string, options?: CookieOptionsArgs): void;\n  putObject(key: string, value: Object, options?: CookieOptionsArgs): void;\n  remove(key: string, options?: CookieOptionsArgs): void;\n  removeAll(): void;\n}\n",
    "import { APP_BASE_HREF } from '@angular/common';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { CookieOptionsArgs } from './cookie-options-args.model';\n\nexport class CookieOptions {\n  path: string;\n  domain: string;\n  expires: string | Date;\n  secure: boolean;\n\n  constructor({ path, domain, expires, secure }: CookieOptionsArgs = {}) {\n    this.path = this.isPresent(path) ? path : null;\n    this.domain = this.isPresent(domain) ? domain : null;\n    this.expires = this.isPresent(expires) ? expires : null;\n    this.secure = this.isPresent(secure) ? secure : false;\n  }\n\n  merge(options?: CookieOptionsArgs): CookieOptions {\n    return new CookieOptions(<CookieOptionsArgs>{\n      path: this.isPresent(options) && this.isPresent(options.path) ? options.path : this.path,\n      domain: this.isPresent(options) && this.isPresent(options.domain) ? options.domain :\n        this.domain,\n      expires: this.isPresent(options) && this.isPresent(options.expires) ? options.expires :\n        this.expires,\n      secure: this.isPresent(options) && this.isPresent(options.secure) ? options.secure :\n        this.secure,\n    });\n  }\n\n  private isPresent(obj: any): boolean {\n    return obj !== undefined && obj !== null;\n  }\n}\n\n@Injectable()\nexport class BaseCookieOptions extends CookieOptions {\n  constructor(@Optional() @Inject(APP_BASE_HREF) private baseHref: string) {\n    super({ path: baseHref || '/' });\n  }\n}\n"
  ],
  "names": [],
  "mappings": ";;;;;;;AEAA,AAIA,MAAA,aAAA,CAAA;;;;IAME,WAAF,CAAc,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAA7C,GAAqE,EAAE,EAAvE;QACI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;QACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC;QACxD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,KAAK,CAAC;KACvD;;;;;IAED,KAAK,CAAC,OAA2B,EAAnC;QACI,OAAO,IAAI,aAAa,mBAAoB;YAC1C,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;YACxF,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM;gBAChF,IAAI,CAAC,MAAM;YACb,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,OAAO;gBACnF,IAAI,CAAC,OAAO;YACd,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM;gBAChF,IAAI,CAAC,MAAM;SACd,EAAC,CAAC;KACJ;;;;;IAEO,SAAS,CAAC,GAAQ,EAA5B;QACI,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;;CAE5C;AAGD,MAAA,iBAA+B,SAAQ,aAAa,CAApD;;;;IACE,WAAF,CAAyD,QAAzD,EAAA;QACI,KAAK,CAAC,EAAE,IAAI,EAAE,QAAQ,IAAI,GAAG,EAAE,CAAC,CAAC;QADoB,IAAzD,CAAA,QAAiE,GAAR,QAAQ,CAAjE;KAEG;;;IAJH,EAAA,IAAA,EAAC,UAAU,EAAX;;;;IAEA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,EAAA,EAAA,IAAA,EAA2B,MAAM,EAAjC,IAAA,EAAA,CAAkC,aAAa,EAA/C,EAAA,EAAA,EAAA;;;;;;;ADpCA,AAMA,MAAA,aAAA,CAAA;;;;IASE,WAAF,CAAkC,eAAlC,EAAA;QAAkC,IAAlC,CAAA,eAAiD,GAAf,eAAe,CAAjD;KAAsE;;;;IARpE,IAAc,YAAY,GAA5B;QACI,OAAO,QAAQ,CAAC,MAAM,IAAI,EAAE,CAAC;KAC9B;;;;;IAED,IAAc,YAAY,CAAC,GAAW,EAAxC;QACI,QAAQ,CAAC,MAAM,GAAG,GAAG,CAAC;KACvB;;;;;IAID,GAAG,CAAC,GAAW,EAAjB;QACI,OAAO,mBAAM,IAAI,CAAC,aAAa,EAAE,GAAE,GAAG,CAAC,CAAC;KACzC;;;;;IAED,SAAS,CAAC,GAAW,EAAvB;QACI,qBAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;KAC1C;;;;IAED,MAAM,GAAR;QACI,yBAAY,IAAI,CAAC,aAAa,EAAE,EAAC;KAClC;;;;;;;IAED,GAAG,CAAC,GAAW,EAAE,KAAa,EAAE,OAA2B,EAA7D;QACI,IAAI,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;KAC3C;;;;;;;IAED,SAAS,CAAC,GAAW,EAAE,KAAa,EAAE,OAA2B,EAAnE;QACI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;KAC/C;;;;;;IAED,MAAM,CAAC,GAAW,EAAE,OAA2B,EAAjD;QACI,IAAI,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;KAC/C;;;;IAED,SAAS,GAAX;QACI,qBAAI,OAAO,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,IAApC;YACM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAClB,CAAC,CAAC;KACJ;;;;IAEO,aAAa,GAAvB;QACI,qBAAI,WAAW,GAAG,EAAE,CAAC;QACrB,qBAAI,gBAAgB,GAAG,EAAE,CAAC;QAC1B,qBAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,qBAAI,WAAqB,mBAAE,MAAc,mBAAE,CAAS,mBAAE,KAAa,mBAAE,IAAY,CAAC;QAClF,qBAAI,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC;QAC5C,IAAI,mBAAmB,KAAK,gBAAgB,EAAE;YAC5C,gBAAgB,GAAG,mBAAmB,CAAC;YACvC,WAAW,GAAG,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC3C,WAAW,GAAG,EAAE,CAAC;YACjB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBACxB,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC5B,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;oBAChE,IAAI,IAAI,CAAC,OAAO,CAAC,mBAAM,WAAW,GAAE,IAAI,CAAC,CAAC,EAAE;wBAC1C,mBAAM,WAAW,GAAE,IAAI,CAAC,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;qBACtF;iBACF;aACF;SACF;QACD,OAAO,WAAW,CAAC;;;;;IAGb,aAAa,GAAvB;QACI,qBAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,OAAO,UAAU,IAAY,EAAE,KAAa,EAAE,OAA2B,EAA7E;YACM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SACnE,CAAC;;;;;;IAGI,uBAAuB,CAAC,GAAW,EAA7C;QACI,IAAI;YACF,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAAC;SAChC;QAAC,wBAAO,CAAC,EAAE;YACV,OAAO,GAAG,CAAC;SACZ;;;;;;;;IAGK,kBAAkB,CAAC,IAAY,EAAE,KAAa,EAAE,OAA2B,EAArF;QACI,qBAAI,UAAU,GAAG,GAAG,CAAC;QACrB,qBAAI,IAAY,mBAAE,OAAY,CAAC;QAC/B,qBAAI,WAAW,GACb,IAAI,CAAC,eAAe,IAAI,IAAI,aAAa,mBAAoB,EAAE,IAAI,EAAE,UAAU,EAAE,EAAC,CAAC;QACrF,qBAAI,IAAI,GAAkB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QACnE,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACvB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACvB,OAAO,GAAG,+BAA+B,CAAC;YAC1C,KAAK,GAAG,EAAE,CAAC;SACZ;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC1B,OAAO,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;SAC7B;QAED,qBAAI,GAAG,GAAG,kBAAkB,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;QACrE,GAAG,IAAI,IAAI,CAAC,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAC7C,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACnD,GAAG,IAAI,OAAO,GAAG,WAAW,GAAG,OAAO,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;QAC1D,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,SAAS,GAAG,EAAE,CAAC;QAEpC,qBAAI,YAAY,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;QAClC,IAAI,YAAY,GAAG,IAAI,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,CAAlB,SAAA,EAA8B,IAAI,CAAlC;aACA,EAAe,YAAY,CAA3B,eAAA,CAA4C,CAAC,CAAC;SACzC;QACD,OAAO,GAAG,CAAC;;;;;;;IAGL,aAAa,CAAC,WAA0B,EAAE,YAAgC,EAApF;QAEI,qBAAI,OAAO,GAAG,WAAW,CAAC;QAC1B,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;YAChC,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC;SACvD;QACD,OAAO,OAAO,CAAC;;;;;;IAGT,OAAO,CAAC,GAAQ,EAA1B;QACI,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;;;;;;IAGnC,SAAS,CAAC,GAAQ,EAA5B;QACI,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;;;;;;IAGnC,QAAQ,CAAC,GAAQ,EAA3B;QACI,OAAO,OAAO,GAAG,KAAK,QAAQ,CAAC;;;;IApInC,EAAA,IAAA,EAAC,UAAU,EAAX;;;;IAHA,EAAA,IAAA,EAAS,aAAa,EAAtB,UAAA,EAAA,CAAA,EAAA,IAAA,EAae,QAAQ,EAbvB,EAAA,EAAA;;;;;;;;;;ADDA,AAIO,MAAM,yBAAyB,GAAG;IACrC,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,iBAAiB,EAAE;IACvD,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC,aAAa,CAAC,EAAE;CACtF,CAAC;;;;;AAEF,AAAA,SAAA,oBAAA,CAAqC,OAAsB,EAA3D;IACI,OAAO,IAAI,aAAa,CAAC,OAAO,CAAC,CAAC;CACrC;;;;;;;;;;;;"
}
